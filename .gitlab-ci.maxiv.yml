---
include:
  - project: kits-maxiv/cfg-maxiv-gitlabci
    file: "/PreCommit.gitlab-ci.yml"
  - project: kits-maxiv/kubernetes/k8s-gitlab-ci
    file: "/Docker-Helm-deploy.gitlab-ci.yml"
    ref: "0.4"

# Override workflow rules to deploy on any branch
workflow:
  rules:
    - if: '$CI_COMMIT_BRANCH'
    - if: '$CI_COMMIT_TAG'

stages:
  - generate-jobs
  - triggers
  - .pre
  - helm_package
  - check
  - build
  - test
  - deploy
  - uninstall
  - .post

variables:
  DOCKER_REGISTRY_URL: "harbor.maxiv.lu.se/notify-server"
  HELM_CHART_REPO: https://harbor.maxiv.lu.se/chartrepo/notify-server
  HELM_CHART_NAME: notify-server
  PRODUCTION_BRANCH_NAME: "master"
  PRODUCTION_DEPLOY_ON_TAG: "true"
  HELM_SET_PROD_ingress_host: "notify.maxiv.lu.se"
  HELM_SET_TEST_ingress_host: "notify-test-${CI_COMMIT_BRANCH}.apps.okdev.maxiv.lu.se"
  HELM_SET_PROD_image_repository: "__from_env_var:REGISTRY_IMAGE_NAME"
  HELM_SET_PROD_image_tag: "__from_env_var:REGISTRY_IMAGE_TAG"
  HELM_SET_TEST_image_repository: "__from_env_var:REGISTRY_IMAGE_NAME"
  HELM_SET_TEST_image_tag: "__from_env_var:REGISTRY_IMAGE_TAG"
  GITLAB_ENVIRONMENT_NAME: notify

# Test with latest versions of requirements
test-python311:
  stage: test
  tags:
    - kubernetes
  image: harbor.maxiv.lu.se/dockerhub/library/python:3.11
  before_script:
    - pip install -e .[tests]
  script:
    - pytest --junitxml=junit.xml --cov-report=xml:coverage.xml --cov-report=term --cov=app -v
  artifacts:
    paths:
      - junit.xml
      - coverage.xml
    reports:
      junit: junit.xml

# Test with frozen requirements
test-docker-image:
  stage: test
  tags:
    - kubernetes
  image: "$REGISTRY_IMAGE_NAME:$REGISTRY_IMAGE_TAG"
  before_script:
    - pip install --no-cache-dir .[tests]
  script:
    - pytest -v
